/**
 * Subscriptions
 * Subscriptions allow contacts to control what forms of communications they receive. Contacts can decide whether they want to receive communication pertaining to a specific topic, brand, or an entire HubSpot account.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

/**
* A request to change the status of a contact\'s subscription.
*/
export class PublicUpdateSubscriptionStatusRequest {
    /**
    * Contact\'s email address.
    */
    'emailAddress': string;
    /**
    * ID of the subscription the contact is being resubscribed to.
    */
    'subscriptionId': string;
    /**
    * Legal basis for resubscribing the contact (required for GDPR enabled portals).
    */
    'legalBasis'?: PublicUpdateSubscriptionStatusRequest.LegalBasisEnum;
    /**
    * A more detailed explanation to go with the legal basis (required for GDPR enabled portals).
    */
    'legalBasisExplanation'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "emailAddress",
            "baseName": "emailAddress",
            "type": "string"
        },
        {
            "name": "subscriptionId",
            "baseName": "subscriptionId",
            "type": "string"
        },
        {
            "name": "legalBasis",
            "baseName": "legalBasis",
            "type": "PublicUpdateSubscriptionStatusRequest.LegalBasisEnum"
        },
        {
            "name": "legalBasisExplanation",
            "baseName": "legalBasisExplanation",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PublicUpdateSubscriptionStatusRequest.attributeTypeMap;
    }
}

export namespace PublicUpdateSubscriptionStatusRequest {
    export enum LegalBasisEnum {
        LEGITIMATEINTERESTPQL = <any> 'LEGITIMATE_INTEREST_PQL',
        LEGITIMATEINTERESTCLIENT = <any> 'LEGITIMATE_INTEREST_CLIENT',
        PERFORMANCEOFCONTRACT = <any> 'PERFORMANCE_OF_CONTRACT',
        CONSENTWITHNOTICE = <any> 'CONSENT_WITH_NOTICE',
        NONGDPR = <any> 'NON_GDPR',
        PROCESSANDSTORE = <any> 'PROCESS_AND_STORE',
        LEGITIMATEINTERESTOTHER = <any> 'LEGITIMATE_INTEREST_OTHER'
    }
}
