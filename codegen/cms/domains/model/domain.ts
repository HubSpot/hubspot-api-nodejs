/**
 * Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DomainCdnConfig } from './domainCdnConfig';
import { DomainSetupInfo } from './domainSetupInfo';

export class Domain {
    'portalId': number;
    'id': number;
    'created': number;
    'updated': number;
    'domain': string;
    'primaryLandingPage': boolean;
    'primaryEmail': boolean;
    'primaryBlog': boolean;
    'primaryBlogPost': boolean;
    'primarySitePage': boolean;
    'primaryKnowledge': boolean;
    'primaryLegacyPage': boolean;
    'primaryClickTracking': boolean;
    'fullCategoryKey': string;
    'secondaryToDomain': string;
    'isResolving': boolean;
    'isDnsCorrect': boolean;
    'manuallyMarkedAsResolving': boolean;
    'consecutiveNonResolvingCount': number;
    'sslCname': string;
    'isSslEnabled': boolean;
    'isSslOnly': boolean;
    'certificateId': number;
    'sslRequestId': number;
    'isUsedForBlogPost': boolean;
    'isUsedForSitePage': boolean;
    'isUsedForLandingPage': boolean;
    'isUsedForEmail': boolean;
    'isUsedForKnowledge': boolean;
    'setupTaskId': number;
    'isSetupComplete': boolean;
    'setUpLanguage': string;
    'teamIds': Array<number>;
    'actualCname': string;
    'correctCname': string;
    'actualIp': string;
    'apexResolutionStatus': Domain.ApexResolutionStatusEnum;
    'apexDomain': string;
    'publicSuffix': string;
    'apexIpAddresses': Array<string>;
    'siteId': number;
    'brandId': number;
    'deletable': boolean;
    'domainCdnConfig': DomainCdnConfig;
    'setupInfo': DomainSetupInfo;
    'derivedBrandName': string;
    'createdById': number;
    'updatedById': number;
    'label': string;
    'isAnyPrimary': boolean;
    'isLegacyDomain': boolean;
    'isInternalDomain': boolean;
    'isResolvingInternalProperty': boolean;
    'isResolvingIgnoringManuallyMarkedAsResolving': boolean;
    'isUsedForAnyContentType': boolean;
    'isLegacy': boolean;
    'authorAt': number;
    'cosObjectType': Domain.CosObjectTypeEnum;
    'cdnPurgeEmbargoTime': number;
    'isStagingDomain': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "portalId",
            "baseName": "portalId",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "number"
        },
        {
            "name": "domain",
            "baseName": "domain",
            "type": "string"
        },
        {
            "name": "primaryLandingPage",
            "baseName": "primaryLandingPage",
            "type": "boolean"
        },
        {
            "name": "primaryEmail",
            "baseName": "primaryEmail",
            "type": "boolean"
        },
        {
            "name": "primaryBlog",
            "baseName": "primaryBlog",
            "type": "boolean"
        },
        {
            "name": "primaryBlogPost",
            "baseName": "primaryBlogPost",
            "type": "boolean"
        },
        {
            "name": "primarySitePage",
            "baseName": "primarySitePage",
            "type": "boolean"
        },
        {
            "name": "primaryKnowledge",
            "baseName": "primaryKnowledge",
            "type": "boolean"
        },
        {
            "name": "primaryLegacyPage",
            "baseName": "primaryLegacyPage",
            "type": "boolean"
        },
        {
            "name": "primaryClickTracking",
            "baseName": "primaryClickTracking",
            "type": "boolean"
        },
        {
            "name": "fullCategoryKey",
            "baseName": "fullCategoryKey",
            "type": "string"
        },
        {
            "name": "secondaryToDomain",
            "baseName": "secondaryToDomain",
            "type": "string"
        },
        {
            "name": "isResolving",
            "baseName": "isResolving",
            "type": "boolean"
        },
        {
            "name": "isDnsCorrect",
            "baseName": "isDnsCorrect",
            "type": "boolean"
        },
        {
            "name": "manuallyMarkedAsResolving",
            "baseName": "manuallyMarkedAsResolving",
            "type": "boolean"
        },
        {
            "name": "consecutiveNonResolvingCount",
            "baseName": "consecutiveNonResolvingCount",
            "type": "number"
        },
        {
            "name": "sslCname",
            "baseName": "sslCname",
            "type": "string"
        },
        {
            "name": "isSslEnabled",
            "baseName": "isSslEnabled",
            "type": "boolean"
        },
        {
            "name": "isSslOnly",
            "baseName": "isSslOnly",
            "type": "boolean"
        },
        {
            "name": "certificateId",
            "baseName": "certificateId",
            "type": "number"
        },
        {
            "name": "sslRequestId",
            "baseName": "sslRequestId",
            "type": "number"
        },
        {
            "name": "isUsedForBlogPost",
            "baseName": "isUsedForBlogPost",
            "type": "boolean"
        },
        {
            "name": "isUsedForSitePage",
            "baseName": "isUsedForSitePage",
            "type": "boolean"
        },
        {
            "name": "isUsedForLandingPage",
            "baseName": "isUsedForLandingPage",
            "type": "boolean"
        },
        {
            "name": "isUsedForEmail",
            "baseName": "isUsedForEmail",
            "type": "boolean"
        },
        {
            "name": "isUsedForKnowledge",
            "baseName": "isUsedForKnowledge",
            "type": "boolean"
        },
        {
            "name": "setupTaskId",
            "baseName": "setupTaskId",
            "type": "number"
        },
        {
            "name": "isSetupComplete",
            "baseName": "isSetupComplete",
            "type": "boolean"
        },
        {
            "name": "setUpLanguage",
            "baseName": "setUpLanguage",
            "type": "string"
        },
        {
            "name": "teamIds",
            "baseName": "teamIds",
            "type": "Array<number>"
        },
        {
            "name": "actualCname",
            "baseName": "actualCname",
            "type": "string"
        },
        {
            "name": "correctCname",
            "baseName": "correctCname",
            "type": "string"
        },
        {
            "name": "actualIp",
            "baseName": "actualIp",
            "type": "string"
        },
        {
            "name": "apexResolutionStatus",
            "baseName": "apexResolutionStatus",
            "type": "Domain.ApexResolutionStatusEnum"
        },
        {
            "name": "apexDomain",
            "baseName": "apexDomain",
            "type": "string"
        },
        {
            "name": "publicSuffix",
            "baseName": "publicSuffix",
            "type": "string"
        },
        {
            "name": "apexIpAddresses",
            "baseName": "apexIpAddresses",
            "type": "Array<string>"
        },
        {
            "name": "siteId",
            "baseName": "siteId",
            "type": "number"
        },
        {
            "name": "brandId",
            "baseName": "brandId",
            "type": "number"
        },
        {
            "name": "deletable",
            "baseName": "deletable",
            "type": "boolean"
        },
        {
            "name": "domainCdnConfig",
            "baseName": "domainCdnConfig",
            "type": "DomainCdnConfig"
        },
        {
            "name": "setupInfo",
            "baseName": "setupInfo",
            "type": "DomainSetupInfo"
        },
        {
            "name": "derivedBrandName",
            "baseName": "derivedBrandName",
            "type": "string"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "number"
        },
        {
            "name": "updatedById",
            "baseName": "updatedById",
            "type": "number"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string"
        },
        {
            "name": "isAnyPrimary",
            "baseName": "isAnyPrimary",
            "type": "boolean"
        },
        {
            "name": "isLegacyDomain",
            "baseName": "isLegacyDomain",
            "type": "boolean"
        },
        {
            "name": "isInternalDomain",
            "baseName": "isInternalDomain",
            "type": "boolean"
        },
        {
            "name": "isResolvingInternalProperty",
            "baseName": "isResolvingInternalProperty",
            "type": "boolean"
        },
        {
            "name": "isResolvingIgnoringManuallyMarkedAsResolving",
            "baseName": "isResolvingIgnoringManuallyMarkedAsResolving",
            "type": "boolean"
        },
        {
            "name": "isUsedForAnyContentType",
            "baseName": "isUsedForAnyContentType",
            "type": "boolean"
        },
        {
            "name": "isLegacy",
            "baseName": "isLegacy",
            "type": "boolean"
        },
        {
            "name": "authorAt",
            "baseName": "authorAt",
            "type": "number"
        },
        {
            "name": "cosObjectType",
            "baseName": "cosObjectType",
            "type": "Domain.CosObjectTypeEnum"
        },
        {
            "name": "cdnPurgeEmbargoTime",
            "baseName": "cdnPurgeEmbargoTime",
            "type": "number"
        },
        {
            "name": "isStagingDomain",
            "baseName": "isStagingDomain",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return Domain.attributeTypeMap;
    }
}

export namespace Domain {
    export enum ApexResolutionStatusEnum {
        Ineligible = <any> 'INELIGIBLE',
        SuggestResolving = <any> 'SUGGEST_RESOLVING',
        AlreadyResolving = <any> 'ALREADY_RESOLVING',
        Error = <any> 'ERROR'
    }
    export enum CosObjectTypeEnum {
        Content = <any> 'CONTENT',
        ExtensionResource = <any> 'EXTENSION_RESOURCE',
        Layout = <any> 'LAYOUT',
        CustomWidget = <any> 'CUSTOM_WIDGET',
        Widget = <any> 'WIDGET',
        Form = <any> 'FORM',
        Placement = <any> 'PLACEMENT',
        Image = <any> 'IMAGE',
        DomainSettings = <any> 'DOMAIN_SETTINGS',
        SiteSettings = <any> 'SITE_SETTINGS',
        EmailAddress = <any> 'EMAIL_ADDRESS',
        Workflow = <any> 'WORKFLOW',
        HubdbTable = <any> 'HUBDB_TABLE',
        RedirectUrl = <any> 'REDIRECT_URL',
        DesignFolder = <any> 'DESIGN_FOLDER',
        SiteMap = <any> 'SITE_MAP',
        Domain = <any> 'DOMAIN',
        Blog = <any> 'BLOG',
        File = <any> 'FILE',
        Folder = <any> 'FOLDER',
        SiteMenu = <any> 'SITE_MENU',
        Theme = <any> 'THEME',
        ContentGroup = <any> 'CONTENT_GROUP',
        FollowMe = <any> 'FOLLOW_ME',
        KnowledgeBase = <any> 'KNOWLEDGE_BASE',
        ListMembership = <any> 'LIST_MEMBERSHIP',
        ContactMembership = <any> 'CONTACT_MEMBERSHIP',
        PasswordProtected = <any> 'PASSWORD_PROTECTED',
        UnrestrictedAccess = <any> 'UNRESTRICTED_ACCESS',
        MarketplaceListing = <any> 'MARKETPLACE_LISTING',
        LayoutSection = <any> 'LAYOUT_SECTION',
        ThemeSettings = <any> 'THEME_SETTINGS',
        VideoPlayer = <any> 'VIDEO_PLAYER',
        UrlMapping = <any> 'URL_MAPPING',
        KnowledgeCategory = <any> 'KNOWLEDGE_CATEGORY',
        KnowledgeHomepageCategory = <any> 'KNOWLEDGE_HOMEPAGE_CATEGORY',
        RawAsset = <any> 'RAW_ASSET',
        GlobalContent = <any> 'GLOBAL_CONTENT',
        HubdbTableRow = <any> 'HUBDB_TABLE_ROW',
        BlogAuthor = <any> 'BLOG_AUTHOR',
        ServerlessFunction = <any> 'SERVERLESS_FUNCTION',
        KnowledgeCategoryTranslation = <any> 'KNOWLEDGE_CATEGORY_TRANSLATION'
    }
}
