/**
 * Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class DomainCdnConfig {
    'portalId': number;
    'created': number;
    'updated': number;
    'domainId': number;
    'certId': number;
    'certExpirationDate': number;
    'cdnId': string;
    'cdnGroupId': string;
    'sslStatus': DomainCdnConfig.SslStatusEnum;
    'validationMethod': DomainCdnConfig.ValidationMethodEnum;
    'httpBody': string;
    'httpUrlPath': string;
    'cname': string;
    'cnameTarget': string;
    'minimumTlsVersion': DomainCdnConfig.MinimumTlsVersionEnum;
    'alternateOriginHostname': string;
    'id': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "portalId",
            "baseName": "portalId",
            "type": "number"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "number"
        },
        {
            "name": "domainId",
            "baseName": "domainId",
            "type": "number"
        },
        {
            "name": "certId",
            "baseName": "certId",
            "type": "number"
        },
        {
            "name": "certExpirationDate",
            "baseName": "certExpirationDate",
            "type": "number"
        },
        {
            "name": "cdnId",
            "baseName": "cdnId",
            "type": "string"
        },
        {
            "name": "cdnGroupId",
            "baseName": "cdnGroupId",
            "type": "string"
        },
        {
            "name": "sslStatus",
            "baseName": "sslStatus",
            "type": "DomainCdnConfig.SslStatusEnum"
        },
        {
            "name": "validationMethod",
            "baseName": "validationMethod",
            "type": "DomainCdnConfig.ValidationMethodEnum"
        },
        {
            "name": "httpBody",
            "baseName": "httpBody",
            "type": "string"
        },
        {
            "name": "httpUrlPath",
            "baseName": "httpUrlPath",
            "type": "string"
        },
        {
            "name": "cname",
            "baseName": "cname",
            "type": "string"
        },
        {
            "name": "cnameTarget",
            "baseName": "cnameTarget",
            "type": "string"
        },
        {
            "name": "minimumTlsVersion",
            "baseName": "minimumTlsVersion",
            "type": "DomainCdnConfig.MinimumTlsVersionEnum"
        },
        {
            "name": "alternateOriginHostname",
            "baseName": "alternateOriginHostname",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return DomainCdnConfig.attributeTypeMap;
    }
}

export namespace DomainCdnConfig {
    export enum SslStatusEnum {
        _0 = <any> '0',
        _1 = <any> '1',
        _2 = <any> '2',
        _3 = <any> '3',
        _4 = <any> '4',
        _5 = <any> '5',
        _6 = <any> '6',
        _7 = <any> '7',
        _8 = <any> '8',
        _9 = <any> '9',
        _10 = <any> '10',
        _11 = <any> '11'
    }
    export enum ValidationMethodEnum {
        _0 = <any> '0',
        _1 = <any> '1',
        _2 = <any> '2'
    }
    export enum MinimumTlsVersionEnum {
        _10 = <any> '1.0',
        _11 = <any> '1.1',
        _12 = <any> '1.2',
        _13 = <any> '1.3',
        None = <any> 'none',
        Null = <any> 'null'
    }
}
