/**
 * Hubdb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Option } from '../models/Option';

export class ColumnRequest {
    /**
    * The id of another table to which the column refers/points to.
    */
    'foreignTableId'?: number;
    /**
    * Name of the column
    */
    'name': string;
    /**
    * Options to choose for select and multi-select columns
    */
    'options': Array<Option>;
    /**
    * Column Id
    */
    'id': number;
    /**
    * Label of the column
    */
    'label': string;
    /**
    * Type of the column
    */
    'type': ColumnRequestTypeEnum;
    /**
    * The id of the column from another table to which the column refers/points to.
    */
    'foreignColumnId'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "foreignTableId",
            "baseName": "foreignTableId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "Array<Option>",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ColumnRequestTypeEnum",
            "format": ""
        },
        {
            "name": "foreignColumnId",
            "baseName": "foreignColumnId",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return ColumnRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ColumnRequestTypeEnum {
    Null = 'NULL',
    Text = 'TEXT',
    Number = 'NUMBER',
    Url = 'URL',
    Image = 'IMAGE',
    Select = 'SELECT',
    Multiselect = 'MULTISELECT',
    Boolean = 'BOOLEAN',
    Location = 'LOCATION',
    Date = 'DATE',
    Datetime = 'DATETIME',
    Currency = 'CURRENCY',
    Richtext = 'RICHTEXT',
    ForeignId = 'FOREIGN_ID',
    Video = 'VIDEO',
    Cta = 'CTA',
    File = 'FILE',
    Json = 'JSON',
    Composite = 'COMPOSITE',
    Code = 'CODE'
}

