/**
 * Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Object for updating files.
*/
export class FileUpdateInput {
    /**
    * New name for the file.
    */
    'name'?: string;
    /**
    * Folder ID where the file should be moved to.  folderId and folderPath cannot be set at the same time.
    */
    'parentFolderId'?: string;
    /**
    * Folder path where the file should be moved to. folderId and folderPath cannot be set at the same time.
    */
    'parentFolderPath'?: string;
    /**
    * Mark weather the file should be used in new content or not.
    */
    'isUsableInContent'?: boolean;
    /**
    * NONE: Do not run any duplicate validation. REJECT: Reject the upload if a duplicate is found. RETURN_EXISTING: If a duplicate file is found, do not upload a new file and return the found duplicate instead. 
    */
    'access'?: FileUpdateInput.AccessEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "parentFolderId",
            "baseName": "parentFolderId",
            "type": "string"
        },
        {
            "name": "parentFolderPath",
            "baseName": "parentFolderPath",
            "type": "string"
        },
        {
            "name": "isUsableInContent",
            "baseName": "isUsableInContent",
            "type": "boolean"
        },
        {
            "name": "access",
            "baseName": "access",
            "type": "FileUpdateInput.AccessEnum"
        }    ];

    static getAttributeTypeMap() {
        return FileUpdateInput.attributeTypeMap;
    }
}

export namespace FileUpdateInput {
    export enum AccessEnum {
        PublicIndexable = <any> 'PUBLIC_INDEXABLE',
        PublicNotIndexable = <any> 'PUBLIC_NOT_INDEXABLE',
        HiddenIndexable = <any> 'HIDDEN_INDEXABLE',
        HiddenNotIndexable = <any> 'HIDDEN_NOT_INDEXABLE',
        HiddenPrivate = <any> 'HIDDEN_PRIVATE',
        Private = <any> 'PRIVATE'
    }
}
