/**
 * Custom Workflow Actions
 * Create custom workflow actions
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ActionFunctionIdentifier } from './actionFunctionIdentifier';
import { ActionLabels } from './actionLabels';
import { ConditionalSingleFieldDependency } from './conditionalSingleFieldDependency';
import { InputFieldDefinition } from './inputFieldDefinition';
import { ObjectRequestOptions } from './objectRequestOptions';
import { SingleFieldDependency } from './singleFieldDependency';

/**
* Configuration for custom workflow action.
*/
export class ExtensionActionDefinition {
    /**
    * The ID of the custom action.
    */
    'id': string;
    'revisionId': string;
    /**
    * A list of functions associated with the custom workflow action.
    */
    'functions': Array<ActionFunctionIdentifier>;
    /**
    * The URL that will accept an HTTPS request each time workflows executes the custom action.
    */
    'actionUrl': string;
    /**
    * Whether this custom action is published to customers.
    */
    'published': boolean;
    /**
    * The date that this custom action was archived, if the custom action is archived.
    */
    'archivedAt'?: number;
    /**
    * The list of input fields to display in this custom action.
    */
    'inputFields': Array<InputFieldDefinition>;
    'objectRequestOptions'?: ObjectRequestOptions;
    /**
    * A list of dependencies between the input fields. These configure when the input fields should be visible.
    */
    'inputFieldDependencies'?: Array<SingleFieldDependency | ConditionalSingleFieldDependency>;
    /**
    * The user-facing labels for the custom action.
    */
    'labels': { [key: string]: ActionLabels; };
    /**
    * The object types that this custom action supports.
    */
    'objectTypes': Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "revisionId",
            "baseName": "revisionId",
            "type": "string"
        },
        {
            "name": "functions",
            "baseName": "functions",
            "type": "Array<ActionFunctionIdentifier>"
        },
        {
            "name": "actionUrl",
            "baseName": "actionUrl",
            "type": "string"
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "boolean"
        },
        {
            "name": "archivedAt",
            "baseName": "archivedAt",
            "type": "number"
        },
        {
            "name": "inputFields",
            "baseName": "inputFields",
            "type": "Array<InputFieldDefinition>"
        },
        {
            "name": "objectRequestOptions",
            "baseName": "objectRequestOptions",
            "type": "ObjectRequestOptions"
        },
        {
            "name": "inputFieldDependencies",
            "baseName": "inputFieldDependencies",
            "type": "Array<SingleFieldDependency | ConditionalSingleFieldDependency>"
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "{ [key: string]: ActionLabels; }"
        },
        {
            "name": "objectTypes",
            "baseName": "objectTypes",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return ExtensionActionDefinition.attributeTypeMap;
    }
}

