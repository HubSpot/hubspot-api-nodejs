/**
 * Webhooks Webhooks
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* New webhook settings for an app.
*/
export class SubscriptionCreateRequest {
    'objectTypeId'?: string;
    /**
    * The internal name of the property to monitor for changes. Only applies when `eventType` is `propertyChange`.
    */
    'propertyName'?: string;
    /**
    * Determines if the subscription is active or paused. Defaults to false.
    */
    'active'?: boolean;
    /**
    * Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.
    */
    'eventType': SubscriptionCreateRequestEventTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "objectTypeId",
            "baseName": "objectTypeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "propertyName",
            "baseName": "propertyName",
            "type": "string",
            "format": ""
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "eventType",
            "baseName": "eventType",
            "type": "SubscriptionCreateRequestEventTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SubscriptionCreateRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum SubscriptionCreateRequestEventTypeEnum {
    ContactPropertyChange = 'contact.propertyChange',
    CompanyPropertyChange = 'company.propertyChange',
    DealPropertyChange = 'deal.propertyChange',
    TicketPropertyChange = 'ticket.propertyChange',
    ProductPropertyChange = 'product.propertyChange',
    LineItemPropertyChange = 'line_item.propertyChange',
    ContactCreation = 'contact.creation',
    ContactDeletion = 'contact.deletion',
    ContactPrivacyDeletion = 'contact.privacyDeletion',
    CompanyCreation = 'company.creation',
    CompanyDeletion = 'company.deletion',
    DealCreation = 'deal.creation',
    DealDeletion = 'deal.deletion',
    TicketCreation = 'ticket.creation',
    TicketDeletion = 'ticket.deletion',
    ProductCreation = 'product.creation',
    ProductDeletion = 'product.deletion',
    LineItemCreation = 'line_item.creation',
    LineItemDeletion = 'line_item.deletion',
    ConversationCreation = 'conversation.creation',
    ConversationDeletion = 'conversation.deletion',
    ConversationNewMessage = 'conversation.newMessage',
    ConversationPrivacyDeletion = 'conversation.privacyDeletion',
    ConversationPropertyChange = 'conversation.propertyChange',
    ContactMerge = 'contact.merge',
    CompanyMerge = 'company.merge',
    DealMerge = 'deal.merge',
    TicketMerge = 'ticket.merge',
    ProductMerge = 'product.merge',
    LineItemMerge = 'line_item.merge',
    ContactRestore = 'contact.restore',
    CompanyRestore = 'company.restore',
    DealRestore = 'deal.restore',
    TicketRestore = 'ticket.restore',
    ProductRestore = 'product.restore',
    LineItemRestore = 'line_item.restore',
    ContactAssociationChange = 'contact.associationChange',
    CompanyAssociationChange = 'company.associationChange',
    DealAssociationChange = 'deal.associationChange',
    TicketAssociationChange = 'ticket.associationChange',
    LineItemAssociationChange = 'line_item.associationChange',
    ObjectPropertyChange = 'object.propertyChange',
    ObjectCreation = 'object.creation',
    ObjectDeletion = 'object.deletion',
    ObjectMerge = 'object.merge',
    ObjectRestore = 'object.restore',
    ObjectAssociationChange = 'object.associationChange'
}

