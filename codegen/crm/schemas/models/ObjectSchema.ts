/**
 * Schemas
 * The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object\'s type, properties, and associations. The schema can be uniquely identified by its **object type ID**.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AssociationDefinition } from '../models/AssociationDefinition';
import { ObjectTypeDefinitionLabels } from '../models/ObjectTypeDefinitionLabels';
import { Property } from '../models/Property';

/**
* Defines an object schema, including its properties and associations.
*/
export class ObjectSchema {
    /**
    * Associations defined for a given object type.
    */
    'associations': Array<AssociationDefinition>;
    /**
    * The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.
    */
    'secondaryDisplayProperties'?: Array<string>;
    'createdByUserId'?: number;
    'objectTypeId'?: string;
    'description'?: string;
    'updatedByUserId'?: number;
    /**
    * An assigned unique ID for the object, including portal ID and object name.
    */
    'fullyQualifiedName'?: string;
    'labels': ObjectTypeDefinitionLabels;
    'archived'?: boolean;
    /**
    * When the object schema was created.
    */
    'createdAt'?: Date;
    /**
    * The names of properties that should be **required** when creating an object of this type.
    */
    'requiredProperties': Array<string>;
    /**
    * Names of properties that will be indexed for this object type in by HubSpot\'s product search.
    */
    'searchableProperties'?: Array<string>;
    /**
    * The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.
    */
    'primaryDisplayProperty'?: string;
    /**
    * A unique name for the schema\'s object type.
    */
    'name': string;
    /**
    * A unique ID for this schema\'s object type. Will be defined as {meta-type}-{unique ID}.
    */
    'id': string;
    /**
    * Properties defined for this object type.
    */
    'properties': Array<Property>;
    /**
    * When the object schema was last updated.
    */
    'updatedAt'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "associations",
            "baseName": "associations",
            "type": "Array<AssociationDefinition>",
            "format": ""
        },
        {
            "name": "secondaryDisplayProperties",
            "baseName": "secondaryDisplayProperties",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "createdByUserId",
            "baseName": "createdByUserId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "objectTypeId",
            "baseName": "objectTypeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedByUserId",
            "baseName": "updatedByUserId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "fullyQualifiedName",
            "baseName": "fullyQualifiedName",
            "type": "string",
            "format": ""
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "ObjectTypeDefinitionLabels",
            "format": ""
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "requiredProperties",
            "baseName": "requiredProperties",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "searchableProperties",
            "baseName": "searchableProperties",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "primaryDisplayProperty",
            "baseName": "primaryDisplayProperty",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "Array<Property>",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return ObjectSchema.attributeTypeMap;
    }

    public constructor() {
    }
}
