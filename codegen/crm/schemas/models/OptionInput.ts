/**
 * Schemas
 * The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object\'s type, properties, and associations. The schema can be uniquely identified by its **object type ID**.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* Defines a enumeration property option
*/
export class OptionInput {
    /**
    * Hidden options won\'t be shown in HubSpot.
    */
    'hidden': boolean;
    /**
    * Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.
    */
    'displayOrder': number;
    /**
    * A description of the option.
    */
    'description'?: string;
    /**
    * A human-readable option label that will be shown in HubSpot.
    */
    'label': string;
    /**
    * The internal value of the option, which must be used when setting the property value through the API.
    */
    'value': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "hidden",
            "baseName": "hidden",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "displayOrder",
            "baseName": "displayOrder",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OptionInput.attributeTypeMap;
    }

    public constructor() {
    }
}
