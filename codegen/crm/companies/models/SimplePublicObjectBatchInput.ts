/**
 * Companies
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class SimplePublicObjectBatchInput {
    /**
    * The name of a property whose values are unique for this object
    */
    'idProperty'?: string;
    /**
    * In each input object, set this field to a unique ID value to enable more granular debugging for error responses. Learn more about [multi-status errors](https://developers.hubspot.com/docs/reference/api/other-resources/error-handling#multi-status-errors).
    */
    'objectWriteTraceId'?: string;
    /**
    * The ID to be updated. This can be the object ID, or the unique property value of the `idProperty` property.
    */
    'id': string;
    /**
    * The company property values to set.
    */
    'properties': { [key: string]: string; };

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "idProperty",
            "baseName": "idProperty",
            "type": "string",
            "format": ""
        },
        {
            "name": "objectWriteTraceId",
            "baseName": "objectWriteTraceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: string; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SimplePublicObjectBatchInput.attributeTypeMap;
    }

    public constructor() {
    }
}
