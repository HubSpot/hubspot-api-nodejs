/**
 * CRM Lists
 * CRUD operations to manage lists and list memberships
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PublicFormSubmissionFilterCoalescingRefineBy } from '../models/PublicFormSubmissionFilterCoalescingRefineBy';
import { PublicPropertyAssociationFilterBranchFilterBranchesInner } from '../models/PublicPropertyAssociationFilterBranchFilterBranchesInner';
import { PublicPropertyAssociationFilterBranchFiltersInner } from '../models/PublicPropertyAssociationFilterBranchFiltersInner';

export class PublicUnifiedEventsFilterBranch {
    'filterBranchType': PublicUnifiedEventsFilterBranchFilterBranchTypeEnum;
    'filterBranches': Array<PublicPropertyAssociationFilterBranchFilterBranchesInner>;
    'eventTypeId': string;
    'coalescingRefineBy'?: PublicFormSubmissionFilterCoalescingRefineBy;
    'filterBranchOperator': string;
    'filters': Array<PublicPropertyAssociationFilterBranchFiltersInner>;
    'operator': PublicUnifiedEventsFilterBranchOperatorEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "filterBranchType",
            "baseName": "filterBranchType",
            "type": "PublicUnifiedEventsFilterBranchFilterBranchTypeEnum",
            "format": ""
        },
        {
            "name": "filterBranches",
            "baseName": "filterBranches",
            "type": "Array<PublicPropertyAssociationFilterBranchFilterBranchesInner>",
            "format": ""
        },
        {
            "name": "eventTypeId",
            "baseName": "eventTypeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "coalescingRefineBy",
            "baseName": "coalescingRefineBy",
            "type": "PublicFormSubmissionFilterCoalescingRefineBy",
            "format": ""
        },
        {
            "name": "filterBranchOperator",
            "baseName": "filterBranchOperator",
            "type": "string",
            "format": ""
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "Array<PublicPropertyAssociationFilterBranchFiltersInner>",
            "format": ""
        },
        {
            "name": "operator",
            "baseName": "operator",
            "type": "PublicUnifiedEventsFilterBranchOperatorEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PublicUnifiedEventsFilterBranch.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum PublicUnifiedEventsFilterBranchFilterBranchTypeEnum {
    UnifiedEvents = 'UNIFIED_EVENTS'
}
export enum PublicUnifiedEventsFilterBranchOperatorEnum {
    HasCompleted = 'HAS_COMPLETED',
    HasNotCompleted = 'HAS_NOT_COMPLETED'
}

