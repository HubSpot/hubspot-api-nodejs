/**
 * Transactional Email
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { EventIdView } from './eventIdView';

/**
* Describes the status of an email send request.
*/
export class EmailSendStatusView {
    'eventId'?: EventIdView;
    /**
    * Identifier used to query the status of the send.
    */
    'statusId': string;
    /**
    * Result of the send.
    */
    'sendResult'?: EmailSendStatusView.SendResultEnum;
    /**
    * Time when the send was requested.
    */
    'requestedAt'?: Date;
    /**
    * Time when the send began processing.
    */
    'startedAt'?: Date;
    /**
    * Time when the send was completed.
    */
    'completedAt'?: Date;
    /**
    * Status of the send request.
    */
    'status': EmailSendStatusView.StatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "eventId",
            "baseName": "eventId",
            "type": "EventIdView"
        },
        {
            "name": "statusId",
            "baseName": "statusId",
            "type": "string"
        },
        {
            "name": "sendResult",
            "baseName": "sendResult",
            "type": "EmailSendStatusView.SendResultEnum"
        },
        {
            "name": "requestedAt",
            "baseName": "requestedAt",
            "type": "Date"
        },
        {
            "name": "startedAt",
            "baseName": "startedAt",
            "type": "Date"
        },
        {
            "name": "completedAt",
            "baseName": "completedAt",
            "type": "Date"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "EmailSendStatusView.StatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return EmailSendStatusView.attributeTypeMap;
    }
}

export namespace EmailSendStatusView {
    export enum SendResultEnum {
        Sent = <any> 'SENT',
        IdempotentIgnore = <any> 'IDEMPOTENT_IGNORE',
        Queued = <any> 'QUEUED',
        IdempotentFail = <any> 'IDEMPOTENT_FAIL',
        Throttled = <any> 'THROTTLED',
        EmailDisabled = <any> 'EMAIL_DISABLED',
        PortalSuspended = <any> 'PORTAL_SUSPENDED',
        InvalidToAddress = <any> 'INVALID_TO_ADDRESS',
        BlockedDomain = <any> 'BLOCKED_DOMAIN',
        PreviouslyBounced = <any> 'PREVIOUSLY_BOUNCED',
        EmailUnconfirmed = <any> 'EMAIL_UNCONFIRMED',
        PreviousSpam = <any> 'PREVIOUS_SPAM',
        PreviouslyUnsubscribedMessage = <any> 'PREVIOUSLY_UNSUBSCRIBED_MESSAGE',
        PreviouslyUnsubscribedPortal = <any> 'PREVIOUSLY_UNSUBSCRIBED_PORTAL',
        InvalidFromAddress = <any> 'INVALID_FROM_ADDRESS',
        CampaignCancelled = <any> 'CAMPAIGN_CANCELLED',
        ValidationFailed = <any> 'VALIDATION_FAILED',
        MtaIgnore = <any> 'MTA_IGNORE',
        BlockedAddress = <any> 'BLOCKED_ADDRESS',
        PortalOverLimit = <any> 'PORTAL_OVER_LIMIT',
        PortalExpired = <any> 'PORTAL_EXPIRED',
        PortalMissingMarketingScope = <any> 'PORTAL_MISSING_MARKETING_SCOPE',
        MissingTemplateProperties = <any> 'MISSING_TEMPLATE_PROPERTIES',
        MissingRequiredParameter = <any> 'MISSING_REQUIRED_PARAMETER',
        PortalAuthenticationFailure = <any> 'PORTAL_AUTHENTICATION_FAILURE',
        MissingContent = <any> 'MISSING_CONTENT',
        CorruptInput = <any> 'CORRUPT_INPUT',
        TemplateRenderException = <any> 'TEMPLATE_RENDER_EXCEPTION',
        GraymailSuppressed = <any> 'GRAYMAIL_SUPPRESSED',
        UnconfiguredSendingDomain = <any> 'UNCONFIGURED_SENDING_DOMAIN',
        Undeliverable = <any> 'UNDELIVERABLE',
        CancelledAbuse = <any> 'CANCELLED_ABUSE',
        QuarantinedAddress = <any> 'QUARANTINED_ADDRESS',
        AddressOnlyAcceptedOnProd = <any> 'ADDRESS_ONLY_ACCEPTED_ON_PROD',
        PortalNotAuthorizedForApplication = <any> 'PORTAL_NOT_AUTHORIZED_FOR_APPLICATION',
        AddressListBombed = <any> 'ADDRESS_LIST_BOMBED',
        AddressOptedOut = <any> 'ADDRESS_OPTED_OUT',
        RecipientFatigueSuppressed = <any> 'RECIPIENT_FATIGUE_SUPPRESSED',
        TooManyRecipients = <any> 'TOO_MANY_RECIPIENTS',
        PreviouslyUnsubscribedBrand = <any> 'PREVIOUSLY_UNSUBSCRIBED_BRAND',
        NonMarketableContact = <any> 'NON_MARKETABLE_CONTACT'
    }
    export enum StatusEnum {
        Pending = <any> 'PENDING',
        Processing = <any> 'PROCESSING',
        Canceled = <any> 'CANCELED',
        Complete = <any> 'COMPLETE'
    }
}
