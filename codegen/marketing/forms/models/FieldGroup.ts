/**
 * Forms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DependentFieldDependentField } from '../models/DependentFieldDependentField';

/**
* A collection of up to three form fields usually displayed in a row.
*/
export class FieldGroup {
    /**
    * 
    */
    'groupType': FieldGroupGroupTypeEnum;
    /**
    * The type of rich text included. The default value is text.
    */
    'richTextType': FieldGroupRichTextTypeEnum;
    /**
    * A block of rich text or an image. Those can be used to add extra information for the customers filling in the form. If the field group includes fields, the rich text will be displayed before the fields.
    */
    'richText'?: string;
    /**
    * The form fields included in the group
    */
    'fields': Array<DependentFieldDependentField>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "groupType",
            "baseName": "groupType",
            "type": "FieldGroupGroupTypeEnum",
            "format": ""
        },
        {
            "name": "richTextType",
            "baseName": "richTextType",
            "type": "FieldGroupRichTextTypeEnum",
            "format": ""
        },
        {
            "name": "richText",
            "baseName": "richText",
            "type": "string",
            "format": ""
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "Array<DependentFieldDependentField>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FieldGroup.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum FieldGroupGroupTypeEnum {
    DefaultGroup = 'default_group',
    Progressive = 'progressive',
    Queued = 'queued'
}
export enum FieldGroupRichTextTypeEnum {
    Text = 'text',
    Image = 'image'
}

