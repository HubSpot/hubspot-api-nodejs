/**
 * Forms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FormStyle } from '../models/FormStyle';

/**
* Options for styling the form.
*/
export class FormDisplayOptions {
    /**
    * Whether the form will render as raw HTML as opposed to inside an iFrame.
    */
    'renderRawHtml': boolean;
    'cssClass'?: string;
    /**
    * The theme used for styling the input fields. This will not apply if the form is added to a HubSpot CMS page.
    */
    'theme': FormDisplayOptionsThemeEnum;
    /**
    * The text displayed on the form submit button.
    */
    'submitButtonText': string;
    'style': FormStyle;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "renderRawHtml",
            "baseName": "renderRawHtml",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "cssClass",
            "baseName": "cssClass",
            "type": "string",
            "format": ""
        },
        {
            "name": "theme",
            "baseName": "theme",
            "type": "FormDisplayOptionsThemeEnum",
            "format": ""
        },
        {
            "name": "submitButtonText",
            "baseName": "submitButtonText",
            "type": "string",
            "format": ""
        },
        {
            "name": "style",
            "baseName": "style",
            "type": "FormStyle",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FormDisplayOptions.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum FormDisplayOptionsThemeEnum {
    DefaultStyle = 'default_style',
    Canvas = 'canvas',
    Linear = 'linear',
    Round = 'round',
    Sharp = 'sharp',
    Legacy = 'legacy'
}

