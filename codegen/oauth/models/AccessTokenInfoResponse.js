/**
 * OAuthService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var AccessTokenInfoResponse = (function () {
    function AccessTokenInfoResponse() {
    }
    AccessTokenInfoResponse.readonly = discriminator;
    return AccessTokenInfoResponse;
})();
exports.AccessTokenInfoResponse = AccessTokenInfoResponse;
string | undefined;
undefined;
readonly;
attributeTypeMap: Array < { name: string, baseName: string, type: string, format: string } > ;
[
    {
        "name": "token",
        "baseName": "token",
        "type": "string",
        "format": ""
    },
    {
        "name": "user",
        "baseName": "user",
        "type": "string",
        "format": ""
    },
    {
        "name": "hubDomain",
        "baseName": "hub_domain",
        "type": "string",
        "format": ""
    },
    {
        "name": "scopes",
        "baseName": "scopes",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "scopeToScopeGroupPks",
        "baseName": "scope_to_scope_group_pks",
        "type": "Array<number>",
        "format": "int32"
    },
    {
        "name": "hubId",
        "baseName": "hub_id",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "appId",
        "baseName": "app_id",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "expiresIn",
        "baseName": "expires_in",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "userId",
        "baseName": "user_id",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "tokenType",
        "baseName": "token_type",
        "type": "string",
        "format": ""
    }];
getAttributeTypeMap();
{
    return AccessTokenInfoResponse.attributeTypeMap;
}
constructor();
{
}
